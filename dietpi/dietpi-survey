#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Survey Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Allows to send DietPi usage info via SFTP to DietPi server
	# - Includes hardware info, DietPi version+branch, installed software, benchmark results and some setup info
	# - No private data is sent, no one can identify you.
	# - Runs after every dietpi-update and dietpi-software install, if user opted in
	# - Summary can be visited at: https://dietpi.com/survey/
	# - Allows the DietPi project to focus development based on popularity
	# - Further info: https://dietpi.com/docs/dietpi_tools/#dietpi-survey
	#
	# Usage:
	# - /boot/dietpi/dietpi-survey		Interactive menu to opt in or out
	# - /boot/dietpi/dietpi-survey 1	Non-interactively send survey data or empty file, based on previous user choice
	#
	# File sent format: $G_HW_UUID.txt
	#////////////////////////////////////

	# Import DietPi-Globals --------------------------------------------------------------
	. /boot/dietpi/func/dietpi-globals
	readonly G_PROGRAM_NAME='DietPi-Survey'
	G_CHECK_ROOT_USER
	G_INIT
	# Import DietPi-Globals --------------------------------------------------------------

	# Grab input
	[[ $1 == 1 ]] && INPUT=1 || INPUT=0

	readonly FP_UPLOAD="$G_HW_UUID.txt"
	readonly SFTP_ADDR='ssh.dietpi.com'
	readonly SFTP_USER='dietpi-survey'
	readonly SFTP_PASS='upload2dietpi'

	Generate_File(){

		# DietPi version
		local version="$G_DIETPI_VERSION_CORE.$G_DIETPI_VERSION_SUB"

		# Current Git owner/branch
		local gitbranch="$G_GITOWNER/$G_GITBRANCH"

		# Active network interface
		local network_interface=$(G_GET_NET -q iface)
		[[ $network_interface ]] || network_interface='NONE'

		# Autostart index
		local autostart_index
		[[ -f '/boot/dietpi/.dietpi-autostart_index' ]] && autostart_index=$(</boot/dietpi/.dietpi-autostart_index)
		[[ $autostart_index ]] || autostart_index=0

		# rootfs on SD card/eMMC?
		local mmc=0
		[[ $G_ROOTFS_DEV == '/dev/mmcblk'* ]] && mmc=1

		cat << _EOF_ > "$FP_UPLOAD"
#!/bin/bash
((aDIETPI_VERSION[$version]++))
((aGIT_BRANCH[$gitbranch]++))
((aDEVICE_NAME[$G_HW_MODEL_NAME]++))
((aCPU_ARCH[$G_HW_ARCH_NAME]++))
((aCPU_COUNT[$G_HW_CPU_CORES]++))
((aDISTRO_VERSION[$G_DISTRO_NAME]++))
((aAUTOSTART_OPTION[\${aAUTOSTART_NAME[$autostart_index]:=$autostart_index}]++))
((aAUTO_SETUP_AUTOMATED[$(grep -cm1 '^[[:blank:]]*AUTO_SETUP_AUTOMATED=1' /boot/dietpi.txt)]++))
((aNETWORK_INTERFACE[$network_interface]++))
MMC=$mmc
_EOF_

		# RPi: Raspbian/Raspberry Pi OS (32-bit) or Debian/Raspberry Pi OS (64-bit)?
		(( $G_HW_MODEL < 10 )) && echo "((aRASPBIAN[$G_RASPBIAN]++))" >> "$FP_UPLOAD"

		# DietPi-Software installs
		[[ -f '/boot/dietpi/.installed' ]] && while read -r software
		do
			software=${software##*[}
			software=${software%%]*}
			disable_error=1 G_CHECK_VALIDINT "$software" && echo "((aSOFTWARE[\${aSOFTWARE_NAME${G_DIETPI_VERSION_CORE}_${G_DIETPI_VERSION_SUB}[$software]:=$software}]++))" >> "$FP_UPLOAD"

		done < <(grep ']=2$' /boot/dietpi/.installed)

		# DietPi-Benchmark results
		[[ -f '/var/lib/dietpi/dietpi-benchmark/results' ]] && cat /var/lib/dietpi/dietpi-benchmark/results >> "$FP_UPLOAD"

	}

	Send_File(){

		# Check if our ssh.dietpi.com SSH host key is present
		if [[ ! -f '/root/.ssh/known_hosts' ]] || ! grep -q '^ssh.dietpi.com[[:blank:]]' /root/.ssh/known_hosts
		then
			# If missing, offer to re-add it
			if G_WHIP_YESNO '[WARNING] ssh.dietpi.com SSH host key is missing\nOur ssh.dietpi.com SSH host key, required to send or purge survey data and bug reports, is missing in /root/.ssh/known_hosts. Shall we re-create it to proceed with sending/purging the bug report?'
			then
				[[ -d '/root/.ssh' ]] || G_EXEC mkdir /root/.ssh
				[[ -f '/root/.ssh/known_hosts' ]] || > /root/.ssh/known_hosts
				G_CONFIG_INJECT 'ssh.dietpi.com[[:blank:]]' 'ssh.dietpi.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDE6aw3r6aOEqendNu376iiCHr9tGBIWPgfrLkzjXjEsHGyVSUFNnZt6pftrDeK7UX+qX4FxOwQlugG4fymOHbimRCFiv6cf7VpYg1Ednquq9TLb7/cIIbX8a6AuRmX4fjdGuqwmBq3OG7ZksFcYEFKt5U4mAJIaL8hXiM2iXjgY02LqiQY/QWATsHI4ie9ZOnwrQE+Rr6mASN1BVFuIgyHIbwX54jsFSnZ/7CdBMkuAd9B8JkxppWVYpYIFHE9oWNfjh/epdK8yv9Oo6r0w5Rb+4qaAc5g+RAaknHeV6Gp75d2lxBdCm5XknKKbGma2+/DfoE8WZTSgzXrYcRlStYN' /root/.ssh/known_hosts
			else
				G_DIETPI-NOTIFY 1 'Skipping sending/purging survey data as our ssh.dietpi.com SSH host key is missing in /root/.ssh/known_hosts...'
				return 1
			fi
		fi

		if (( $OPTED_IN ))
		then
			[[ -f $FP_UPLOAD ]] || Generate_File
		else
			# Send empty file to overwrite existing data, "rm" is not possible due to missing file list permissions
			> "$FP_UPLOAD"
		fi

		# Upload to server
		local timeout=$(sed -n '/^[[:blank:]]*CONFIG_G_CHECK_URL_TIMEOUT=/{s/^[^=]*=//p;q}' /boot/dietpi.txt) G_EXEC_DESC='Sending survey data'
		(( $OPTED_IN )) || G_EXEC_DESC='Purging survey data'
		# - Timeout x2 for DNS resolving + connection, upload itself is done in no time
		G_EXEC_NOHALT=1 G_EXEC curl --key '' -m $(( ${timeout:-5} * 2 )) -sT "$FP_UPLOAD" "sftp://$SFTP_USER:$SFTP_PASS@$SFTP_ADDR/survey/"
		return $?

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	# Read opt in/out choice: 1=yes and send data | 0=no and purge data
	OPTED_IN=$(sed -n '/^[[:blank:]]*SURVEY_OPTED_IN=[01]$/{s/^[^=]*=//p;q}' /boot/dietpi.txt)
	# - No (valid) choice done yet
	if [[ $OPTED_IN != [01] ]]
	then
		# Do not send data without user interactively opted in!
		OPTED_IN=0
		# Ask for choice, if interactive
		(( $G_INTERACTIVE )) && INPUT=0
	fi

	# Interactive menu
	until (( $INPUT ))
	do
		G_WHIP_MENU_ARRAY=(

			'Show' ': Show me the upload file content'
			'1' ': Opt IN and upload data'
			'0' ': Opt OUT and purge uploaded data'
		)

		G_WHIP_DEFAULT_ITEM=$OPTED_IN
		if G_WHIP_MENU 'DietPi-Survey would like to collect anonymous usage statistics.
This allows us to focus development based on popularity.
 - NO private data will be collected and NO ONE can identify you based on it.
 - The data is sent via secured SFTP connection, stored unreadable to the public upload user.
 - If you agree, your uploaded data will be updated after each DietPi-Update and DietPi-Software install.
 - Current survey statistics can be reviewed at: https://dietpi.com/survey/
\nWould you like to join DietPi-Survey?'
		then
			if [[ $G_WHIP_RETURNED_VALUE == 'Show' ]]
			then
				Generate_File
				G_WHIP_VIEWFILE "$FP_UPLOAD"
				continue # Stay in loop
			else
				OPTED_IN=$G_WHIP_RETURNED_VALUE
				G_CONFIG_INJECT 'SURVEY_OPTED_IN=' "SURVEY_OPTED_IN=$OPTED_IN" /boot/dietpi.txt
			fi
		fi

		break
	done

	# Send data if opted in or empty file if opted out
	Send_File

	#-----------------------------------------------------------------------------------
	exit $?
	#-----------------------------------------------------------------------------------
}
