#!/bin/bash
{
# DietPi-Update incremental patches to apply system and software migrations and fixes
# Created by MichaIng / micha@dietpi.com / https://dietpi.com/
# License: GPLv2 / https://github.com/MichaIng/DietPi#license

# v7.1 + v7.8: Update changed hardware IDs before dietpi-obtain_hw_model would reset them to 22
if [[ -f '/etc/.dietpi_hw_model_identifier' ]]
then
	G_HW_MODEL=$(</etc/.dietpi_hw_model_identifier)
	# https://github.com/MichaIng/DietPi/pull/4193
	if [[ $G_HW_MODEL == 14 || $G_HW_MODEL == 69 ]] # Odroid N1 (v7.8), Firefly RK3399
	then
		echo 24 > /etc/.dietpi_hw_model_identifier # Generic Rockchip RK3399

	elif [[ $G_HW_MODEL == 50 || $G_HW_MODEL == 41 || $G_HW_MODEL == 3[54310] ]] # BananaPi M2+, OrangePi PC Plus, OPi Zero 2 Plus, OrangePi Plus, OrangePi Lite, OrangePi One, OrangePi PC
	then
		echo 25 > /etc/.dietpi_hw_model_identifier # Generic Allwinner H3

	elif [[  $G_HW_MODEL == 3[87] ]] # OPi PC2, OPi Prime
	then
		echo 26 > /etc/.dietpi_hw_model_identifier # Generic Allwinner H5
	fi
fi

# Load DietPi-Globals
/boot/dietpi/func/dietpi-obtain_hw_model # Always update
. /boot/dietpi/func/dietpi-globals
readonly G_PROGRAM_NAME='DietPi-Patch'
G_CHECK_ROOT_USER
G_CHECK_ROOTFS_RW
G_INIT

# Prevent backup prompts during patching e.g. from DietPi-Software reinstalls
export G_PROMPT_BACKUP_DISABLED=1
# Prevent initial and final service control during DietPi-Software reinstalls
export G_SERVICE_CONTROL=0

# Version-based incremental patches
Patch_7_0()
{
	# Remove obsolete udev rule, as WiFi power saving is disabled via /etc/network/interfaces > "wireless-power off" > /etc/network/if-pre-up.d/wireless-tools (wireless-tools package) when the WiFi interface is configured.
	[[ -f '/etc/udev/rules.d/10-wifi-disable-powermanagement.rules' ]] && G_EXEC rm /etc/udev/rules.d/10-wifi-disable-powermanagement.rules
}

Patch_7_1()
{
	# Migrate from DietPi-NordVPN to DietPi-VPN
	[[ -f '/boot/dietpi/misc/dietpi-nordvpn' ]] && G_EXEC rm /boot/dietpi/misc/dietpi-nordvpn
	[[ -d '/var/lib/dietpi/dietpi-software/installed/dietpi-nordvpn' ]] && G_EXEC mv /var/lib/dietpi/dietpi-software/installed/dietpi-nordvpn /var/lib/dietpi/dietpi-vpn
	if [[ -f '/var/lib/dietpi/dietpi-vpn/settings_dietpi.conf' ]]
	then
		G_EXEC sed -Ei 's/^NORDVPN_(SERVER|USERNAME|PASSWORD)=/VPN_\1=/' /var/lib/dietpi/dietpi-vpn/settings_dietpi.conf
		local PROTOCOL VPN_SERVER
		# shellcheck disable=SC1091
		. /var/lib/dietpi/dietpi-vpn/settings_dietpi.conf
		[[ -f '/etc/openvpn/client.ovpn' ]] || G_EXEC cp -a "/etc/openvpn/ovpn_$PROTOCOL/$VPN_SERVER" /etc/openvpn/client.ovpn
		unset -v VPN_SERVER PROTOCOL VPN_USERNAME VPN_PASSWORD
		G_EXEC sed -i 's|/var/lib/dietpi/dietpi-software/installed/dietpi-nordvpn/|/var/lib/dietpi/dietpi-vpn/|' /etc/openvpn/client.ovpn
	fi
	if [[ -f '/etc/systemd/system/dietpi-nordvpn.service' ]]
	then
		systemctl -q is-enabled dietpi-nordvpn && G_EXEC systemctl enable dietpi-vpn
		G_EXEC systemctl disable dietpi-nordvpn
		G_EXEC rm /etc/systemd/system/dietpi-nordvpn.service
	fi

	# MariaDB: Rename config file: https://github.com/MichaIng/DietPi/commit/c306d449a7c4ed86a1e9ff7c4914d9e1c2afd11a
	[[ -f '/etc/mysql/mariadb.conf.d/99-dietpi-4byte.cnf' ]] && G_EXEC mv /etc/mysql/mariadb.conf.d/99-dietpi-4byte.cnf /etc/mysql/mariadb.conf.d/97-dietpi.cnf

	# RPi: Additionally blacklist the bcm2835_isp kernel module when the RPi camera feature is disabled: https://github.com/MichaIng/DietPi/issues/4203
	[[ -f '/etc/modprobe.d/dietpi-disable_rpi_camera.conf' ]] && ! grep -q 'bcm2835_isp' /etc/modprobe.d/dietpi-disable_rpi_camera.conf && echo 'blacklist bcm2835_isp' >> /etc/modprobe.d/dietpi-disable_rpi_camera.conf

	# Mark now dedicated Go as installed if OpenBazaar is
	[[ -d '/usr/local/go' ]] && ! grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[188\]=2' /boot/dietpi/.installed && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[58\]=2' /boot/dietpi/.installed && G_CONFIG_INJECT 'aSOFTWARE_INSTALL_STATE\[188\]=' 'aSOFTWARE_INSTALL_STATE[188]=2' /boot/dietpi/.installed

	# Interactively inform user about possible No-IP => DietPi-DDNS migration
	[[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[67\]=2' /boot/dietpi/.installed && G_WHIP_MSG '[ INFO ] No-IP client installation found
\nThe No-IP client install option has been replaced by our new DietPi-DDNS tool. The No-IP client remains functional on your system but we recommend a migration to our new tool.
\nSimply run "dietpi-ddns" from console, select "No-IP" as provider, enter domain and credentials, then select "Apply". The old No-IP client and service will be removed automatically as last step, once a final DDNS update test succeeded.'

	# Remove obsolete DietPi-NordVPN and No-IP install states
	[[ -f '/boot/dietpi/.installed' ]] && grep -qE '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[(67|171)\]=' /boot/dietpi/.installed && G_EXEC sed -Ei '/^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[(67|171)\]=/d' /boot/dietpi/.installed

	# Inform user about possible Sonarr v2 => v3 upgrade
	[[ -f '/mnt/dietpi_userdata/sonarr/nzbdrone.pid' ]] && G_WHIP_MSG '[ INFO ] Sonarr v3 has been released
\nYou seem to use Sonarr v2 while Sonarr v3 is now available. A migration is safe to do, but in some cases you might need to redo some configuration, so we do not force the upgrade now.
\nTo migrate to Sonarr v3, run the following command from console:
 - dietpi-software reinstall 144
\nNB: If you use DietPi-Arr_to_RAM and update database backups via Sonarr "Custom Scripts" feature, the following change is required:
 - Run "dietpi-arr_to_ram 2" once manually, which updates your database backup but also creates a new script.
 - Use that script /mnt/dietpi_userdata/sonarr/dietpi-arr_to_ram.sh without arguments to update your database backup via "Custom Scripts". This is required as Sonarr v3 does not allow arguments for custom scripts and does not allow to call scripts from within the /boot directory.'

	# Removing obsolete DietPi-Arr_to_RAM backup files
	rm -f /mnt/dietpi_userdata/{{sonarr,radarr}/nzbdrone.db-{shm,wal},lidarr/lidarr.db-{shm,wal}}.bak

	# On 64-bit RPi systems, remove the obsolete foreign architecture armhf
	[[ $G_HW_MODEL -le 9 && $G_HW_ARCH == 3 && $(dpkg --print-architecture) == 'arm64' ]] && ! dpkg-query -l '*:armhf' &> /dev/null && G_EXEC dpkg --remove-architecture 'armhf'

	# Plex Media Server: Fix secure remote access via app.plex.tv did not work if Unbound with DNS rebinding protection is installed: https://dietpi.com/phpbb/viewtopic.php?t=8896
	[[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[42\]=2' /boot/dietpi/.installed && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[182\]=2' /boot/dietpi/.installed && echo -e 'server:\n\tprivate-domain: "plex.direct"' > /etc/unbound/unbound.conf.d/dietpi-plex.conf
}

Patch_7_2()
{
	# Odroid XU4 does not support rng-tools: https://github.com/MichaIng/DietPi/issues/4318
	[[ $G_HW_MODEL == 11 ]] && G_AGP rng-tools{,5,-debian}

	# raspimjpeg: Move executable to a common system path
	if [[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[59\]=2' /boot/dietpi/.installed
	then
		G_DIETPI-NOTIFY 2 'Moving raspimjpeg executable to a common system path'
		[[ -f '/opt/vc/bin/raspimjpeg' ]] && G_EXEC mv /{opt/vc,usr/local}/bin/raspimjpeg
		[[ -L '/usr/bin/raspimjpeg' ]] && G_EXEC rm /usr/bin/raspimjpeg
	fi

	# Bitwarden_RS: Rename into vaultwarden: https://github.com/MichaIng/DietPi/issues/4325
	if [[ -d '/mnt/dietpi_userdata/bitwarden_rs' ]]
	then
		G_DIETPI-NOTIFY 2 'vaultwarden will be reinstalled now.'
		# Remove Bitwarden_RS service
		if [[ -f '/etc/systemd/system/bitwarden_rs.service' ]]
		then
			G_EXEC systemctl disable --now bitwarden_rs
			G_EXEC rm /etc/systemd/system/bitwarden_rs.service
		fi
		[[ -d '/etc/systemd/system/bitwarden_rs.service.d' ]] && G_EXEC rm -R /etc/systemd/system/bitwarden_rs.service.d
		# Remove Bitwarden_RS user and group
		getent passwd bitwarden_rs > /dev/null && G_EXEC userdel bitwarden_rs
		getent group bitwarden_rs > /dev/null && G_EXEC groupdel bitwarden_rs
		# Remove Bitwarden_RS install directory
		[[ -d '/opt/bitwarden_rs' ]] && G_EXEC rm -R /opt/bitwarden_rs
		# Update and rename Bitwarden_RS config file
		if [[ -f '/mnt/dietpi_userdata/bitwarden_rs/bitwarden_rs.env' ]]
		then
			G_CONFIG_INJECT 'DATA_FOLDER=' 'DATA_FOLDER=/mnt/dietpi_userdata/vaultwarden' /mnt/dietpi_userdata/bitwarden_rs/bitwarden_rs.env
			G_EXEC mv /mnt/dietpi_userdata/bitwarden_rs/{bitwarden_rs,vaultwarden}.env
		fi
		G_EXEC mv /mnt/dietpi_userdata/{bitwarden_rs,vaultwarden}
		# Start vaultwarden reinstallation
		/boot/dietpi/dietpi-software reinstall 183 || G_WHIP_MSG '[WARNING] The vaultwarden (re)install failed.
\nHowever, all required dietpi-update migration steps have been done and it will hence finish.
\nRepeat the reinstall manually to bring up your new vaultwarden instance, when you find time: "dietpi-software reinstall 183"'
	fi

	# Fix disabling dietpi-desktop_setup
	[[ -f '/var/lib/dietpi/dietpi-software/installed/desktop/dietpi-desktop_setup.sh' ]] && grep -q 'echo -e' /var/lib/dietpi/dietpi-software/installed/desktop/dietpi-desktop_setup.sh && G_EXEC sed -i 's/echo -e/echo/' /var/lib/dietpi/dietpi-software/installed/desktop/dietpi-desktop_setup.sh
	for i in /{root,home/*}/.config/autostart/dietpi-desktop_setup.desktop
	do
		[[ -f $i ]] && grep -q '^-e ' "$i" && G_EXEC sed -i 's/^-e //' "$i"
	done

	# LibSSL1.0.0: Remove obsolete install state
	[[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[126\]=' /boot/dietpi/.installed && G_EXEC sed -i '/^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[126\]=/d' /boot/dietpi/.installed

	# Roon Extension Manager: Inform users about available upgrade: https://github.com/MichaIng/DietPi/pull/4399
	[[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[86\]=2' /boot/dietpi/.installed && G_WHIP_MSG '[ INFO ] Roon Extension Manager: Major upgrade available
\nThe Roon Extension Manager received a major upgrade to v1.0. It is now implemented as Docker container, rather than as Node.js module.
\nYou may upgrade via: dietpi-software reinstall 86
\nNB: Roon extensions which were installed via the legacy method must be reinstalled with the new Roon Extension Manager. Extensions which were installed as Docker images already, will continue to function.'

	# Inform about available software updates
	if [[ -f '/boot/dietpi/.installed' ]]
	then
		# Amiberry
		grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[108\]=2' /boot/dietpi/.installed && G_WHIP_MSG '[ INFO ] Amiberry update available
\nAn update to Amiberry v4.1.2 is available. Apply it via reinstall:
# dietpi-software reinstall 108
\nRelease notes: https://github.com/midwan/amiberry/releases'
		# Shairport Sync
		grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[37\]=2' /boot/dietpi/.installed && G_WHIP_MSG '[ INFO ] Shairport Sync update available
\nAn update to Shairport Sync v3.3.8 is available. Apply it via reinstall:
# dietpi-software reinstall 37
\nRelease notes: https://github.com/mikebrady/shairport-sync/releases'
		# Squeezelite
		grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[36\]=2' /boot/dietpi/.installed && G_WHIP_MSG '[ INFO ] Squeezelite update available
\nAn update to Squeezelite v1.9.9 is available. Apply it via reinstall:
# dietpi-software reinstall 36
\nChange log: https://github.com/ralph-irving/squeezelite/commits/556de56'
	fi
}

Patch_7_3()
{
	# If the user did not remove the "dietpi" sudoers manually, update it to allow "sudo -u <user> -g <group>" with all target users and groups.
	# This is required to call our software CLI wrapper scripts, which contain "sudo -u <service_user>" to assure correct config and data is loaded.
	[[ -f '/etc/sudoers.d/dietpi' ]] && echo 'dietpi ALL=(ALL:ALL) NOPASSWD: ALL' > /etc/sudoers.d/dietpi

	# When haveged from Bullseye was installed on Buster (on ARM to workaround a bug), mark the related library as auto-installed so that it can be autoremoved when haveged itself is removed.
	dpkg-query -s haveged &> /dev/null && dpkg-query -s libhavege2 &> /dev/null && G_EXEC apt-mark auto libhavege2

	# Update DietPi-Backup filter file
	if [[ -f '/boot/dietpi/.dietpi-backup_inc_exc' && $(head -1 /boot/dietpi/.dietpi-backup_inc_exc) != '# DietPi-Backup include/exclude filter' ]]
	then
		G_DIETPI-NOTIFY 2 'Updating DietPi-Backup filter file: /boot/dietpi/.dietpi-backup_inc_exc'
		if grep -q '^[[:blank:]]*[^#]' /boot/dietpi/.dietpi-backup_inc_exc
		then
			cat << _EOF_ > .dietpi-backup_inc_exc
# DietPi-Backup include/exclude filter

# Prefix "-" exclude items, "+" include items which would match a wildcard exclude rule.
# Suffix "/" match directories only, no files or symlinks.
# Using wildcard "*" matches any item name or part of it.
# Since the list is processed from top to bottom and the first match defines the result,
#   includes need to be defined before their wildcard exclude rule
#   and in case excludes before their wildcard include rule.
# Symlinks are handled as such and never processed recursively.
# Excluded directories are not processed recursively, so contained items cannot be included.
# Hence, to include items within an excluded directory:
# - Do not exclude the directory itself, but contained items via wildcard.
# - Define includes first, to override the wildcard exclude rule.
# - See the below default rules, how we exclude all items below /mnt
#   but include the dietpi_userdata directory, if it is no symlink.
# To prevent loops, the backup target dir, log and config are excluded internally.

+ /mnt/dietpi_userdata/
- /mnt/*
- /media/

$(grep '^[[:blank:]]*[^#]' /boot/dietpi/.dietpi-backup_inc_exc)
_EOF_
			G_EXEC mv {,/boot/dietpi/}.dietpi-backup_inc_exc
		else
			G_EXEC rm /boot/dietpi/.dietpi-backup_inc_exc
		fi
	fi

	# RPi: Remove deprecated I2C setting from config.txt
	(( $G_HW_MODEL > 9 )) || G_EXEC sed -i '/dtparam=i2c1=/d' /boot/config.txt

	# Tomcat 8: Remove obsolete install state
	[[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[125\]=' /boot/dietpi/.installed && G_EXEC sed -i '/^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[125\]=/d' /boot/dietpi/.installed

	# Remove license (flag) file if AUTO_SETUP_AUTOMATED=1 is set, which would otherwise never happen on pre-v7.2 images, and if AUTO_SETUP_ACCEPT_LICENSE=1 is set, to assure the prompt is skipped when for some reason the script is reloaded between update and first installs.
	[[ -f '/var/lib/dietpi/license.txt' ]] && grep -Eq '^[[:blank:]]*AUTO_SETUP_A(UTOMATED|CCEPT_LICENSE)=1' /boot/dietpi.txt && G_EXEC rm /var/lib/dietpi/license.txt
}

Patch_7_4()
{
	if [[ $G_HW_ARCH == [12] && ! -f '/etc/pip.conf' && -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[130\]=2' /boot/dietpi/.installed
	then
		G_WHIP_BUTTON_CANCEL_TEXT='No' G_WHIP_YESNO 'Adding piwheels.org to your pip sources
\nPython 3 pip is installed on your system, but piwheels.org is not used as source for pre-compiled Python 3 wheels. To speed up the installation and upgrade of modules via pip and reduce build dependencies, we highly recommend to make use of it.
\nRead more about the project at: https://piwheels.org/
\nDo you want pip to pull Python 3 wheels from piwheels.org automatically?' && G_EXEC eval "echo -e '[global]\nextra-index-url=https://www.piwheels.org/simple/' > /etc/pip.conf"
	fi
}

Patch_7_5()
{
	# Mark JRE as installed when JDK is installed
	[[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[8\]=2' /boot/dietpi/.installed && G_CONFIG_INJECT 'aSOFTWARE_INSTALL_STATE\[196\]=' 'aSOFTWARE_INSTALL_STATE[196]=2' /boot/dietpi/.installed

	if getent passwd blynk > /dev/null && ! getent group blynk > /dev/null
	then
		G_DIETPI-NOTIFY 2 'Creating the "blynk" group for the Blynk server, as replacement for the previously used "dietpi" group'
		G_EXEC groupadd -r blynk
		G_EXEC usermod -g blynk blynk
	fi

	# Amiberry on RPi: Revert cmdline.txt changes we do not apply anymore
	if [[ $G_HW_MODEL -le 9 && -f '/boot/dietpi/.dietpi-autostart_index' && $(</boot/dietpi/.dietpi-autostart_index) == 6 ]]
	then
		G_DIETPI-NOTIFY 2 'Reverting some obsolete cmdline tweaks for Amiberry fast boot'
		grep -q '[[:blank:]]loglevel=3' /boot/cmdline.txt && G_EXEC sed -i 's/[[:blank:]]*loglevel=3//' /boot/cmdline.txt
		grep -q '[[:blank:]]console=tty3' /boot/cmdline.txt && G_EXEC sed -i 's/[[:blank:]]*console=tty3/ console=tty1/' /boot/cmdline.txt
	fi

	# Fix syntax in initramfs cleanup script
	[[ -f '/etc/kernel/preinst.d/dietpi-initramfs_cleanup' ]] && grep -q 'reverse) do' /etc/kernel/preinst.d/dietpi-initramfs_cleanup && G_EXEC sed -i 's/reverse) do/reverse); do/' /etc/kernel/preinst.d/dietpi-initramfs_cleanup

	# RPi: Offer to prevent constant SD card polling
	(( $G_HW_MODEL < 10 )) && ! grep -q '^dtparam=sd_poll_once' /boot/config.txt && G_WHIP_BUTTON_CANCEL_TEXT='Skip' G_WHIP_YESNO '[ INFO ] Disable SD card hot plug detection
\nAn issue was detected on RPi, where the default regular SD card polling leads to significant CPU load, when no SD card is actually attached:
- https://github.com/MichaIng/DietPi/issues/4602
\nThe regular polling is required to allow SD card hot plug detection, so that you can instantly mount them, when plugged to a running Pi.
\nAs long as an SD card is present or used as system drive, it does not imply notable CPU load, but also hot plug detection is not needed then. We hence recommend to have this feature disabled on all RPi systems.
\nDo you want to have SD card hot plug detection disabled now?' && G_CONFIG_INJECT 'dtparam=sd_poll_once' 'dtparam=sd_poll_once' /boot/config.txt

	# Lidarr: Reinstall on non-ARMv6 platforms to migrate to .NET based build. Use old install directory (capital "L") as flag for this not been done already.
	if [[ $G_HW_ARCH != 1 && -f '/boot/dietpi/.installed' && -d '/opt/Lidarr' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[106\]=2' /boot/dietpi/.installed
	then
		G_DIETPI-NOTIFY 2 'Reinstalling Lidarr to migrate to new .NET based builds. Your configs and data remain untouched!'
		G_EXEC rm -R /opt/Lidarr
		/boot/dietpi/dietpi-software reinstall 106
		# Offer to uninstall Mono, if Sonarr is not installed
		! grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[144\]=2' /boot/dietpi/.installed && G_WHIP_BUTTON_CANCEL_TEXT='Skip' G_WHIP_YESNO '[ INFO ] Lidarr has been migrated to the new .NET based builds.
\nThe dedicated Mono runtime install is hence not required anymore to run Lidarr and can be uninstalled, unless you require it for other purpose.
\nDo you want to uninstall Mono now?' && /boot/dietpi/dietpi-software uninstall 150
	fi
}

Patch_7_6()
{
	# RPi: Remove obsolete cmdline entry on v5.4+ kernel systems (not Stretch)
	if (( $G_HW_MODEL < 10 && $G_DISTRO > 4 ))
	then
		G_DIETPI-NOTIFY 2 'Removing obsolete "elevator" entry from /boot/cmdline.txt'
		G_EXEC sed -Ei 's/elevator=[^[:blank:]]*[[:blank:]]+//' /boot/cmdline.txt
		G_EXEC sed -Ei 's/[[:blank:]]*elevator=[^[:blank:]]*//' /boot/cmdline.txt
	fi

	# https://github.com/jirka-h/haveged/pull/7 https://github.com/MichaIng/DietPi/issues/3689#issuecomment-678322767
	if [[ $G_DISTRO == 5 && $G_HW_ARCH == [23] ]] && { [[ $G_HW_MODEL == 11 ]] || dpkg-query -s haveged &> /dev/null; }
	then
		G_DIETPI-NOTIFY 2 'Upgrading haveged entropy daemon to fix an issue on ARM:'
		G_DIETPI-NOTIFY 2 ' - https://github.com/jirka-h/haveged/pull/7'
		G_EXEC curl -sSfLO "https://dietpi.com/downloads/binaries/buster/libhavege2_$G_HW_ARCH_NAME.deb"
		G_EXEC curl -sSfLO "https://dietpi.com/downloads/binaries/buster/haveged_$G_HW_ARCH_NAME.deb"
		G_AGI "./libhavege2_$G_HW_ARCH_NAME.deb" "./haveged_$G_HW_ARCH_NAME.deb"
		G_EXEC rm "./libhavege2_$G_HW_ARCH_NAME.deb" "./haveged_$G_HW_ARCH_NAME.deb"
	fi

	# https://github.com/MichaIng/DietPi/issues/4710
	if [[ $G_DISTRO -ge 5 && $G_HW_ARCH == 2 ]] && dpkg-query -s haveged &> /dev/null
	then
		G_DIETPI-NOTIFY 2 'Applying workaround for haveged entropy daemon bug:'
		G_DIETPI-NOTIFY 2 ' - https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=985196'
		G_EXEC mkdir -p /etc/systemd/system/haveged.service.d
		G_EXEC eval "echo -e '[Service]\nSystemCallFilter=uname' > /etc/systemd/system/haveged.service.d/dietpi.conf"
		G_EXEC systemctl daemon-reload
		G_EXEC systemctl restart haveged
	fi
}

Patch_7_7()
{
	G_DIETPI-NOTIFY 2 'Reverting Mosquitto and Webmin repositories back to HTTPS'
	G_EXEC sed -Ei 's#http://(repo.mosquitto.org|download.webmin.com)#https://\1#' /etc/apt/sources.list
	[[ $(find /etc/apt/sources.list/*.list 2> /dev/null) ]] && G_EXEC sed -Ei 's#http://(repo.mosquitto.org|download.webmin.com)#https://\1#' /etc/apt/sources.list.d/*.list

	# Inform users about abandoned CouchPotato and in case add service to DietPi-Services includes, as it has been removed from the hardcoded list
	if [[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[142\]=2' /boot/dietpi/.installed
	then
		G_WHIP_MSG '[ INFO ] CouchPotato has been abandoned
\nSadly, the CouchPotato project is not maintained anymore and has been abandoned. In turn we removed it from DietPi.
\nThe instance installed on your system will remain, but it cannot be installed, reinstalled or uninstalled anymore.
\nWe recommend to migrate to an alternative project, like Radarr, which can be found in DietPi-Software was well.
\nManual CouchPotato uninstall instructions: https://github.com/MichaIng/DietPi/issues/4323#issuecomment-927128724
'
		if [[ -f '/etc/init.d/couchpotato' ]]
		then
			# shellcheck disable=SC2015
			[[ -f '/boot/dietpi/.dietpi-services_include_exclude' ]] && grep -q 'couchpotato' /boot/dietpi/.dietpi-services_include_exclude || G_EXEC eval "echo '+ couchpotato' >> /boot/dietpi/.dietpi-services_include_exclude"
		fi
	fi
	# Remove obsolete CouchPotato install state
	[[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[142\]=' /boot/dietpi/.installed && G_EXEC sed -i '/^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[142\]=/d' /boot/dietpi/.installed

	# Fix Deluge web interface service on Bullseye: https://github.com/MichaIng/DietPi/issues/4785
	if [[ $G_DISTRO -ge 6 && -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[45\]=2' /boot/dietpi/.installed && ! grep -q 'ExecStart.* -d ' /etc/systemd/system/deluge-web.service
	then
		G_DIETPI-NOTIFY 2 'Patching Deluge web interface service to fix startup at Bullseye'
		G_EXEC sed -i 's/deluge-web -l/deluge-web -d -l/' /etc/systemd/system/deluge-web.service
	fi

	# Mono: Migrate APT list and key to new location and naming
	if [[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[150\]=2' /boot/dietpi/.installed
	then
		G_DIETPI-NOTIFY 2 'Migrating Mono APT list and key to new location and naming'
		[[ -f '/etc/apt/sources.list.d/mono-xamarin.list' ]] && G_EXEC mv /etc/apt/sources.list.d/mono-xamarin.list /etc/apt/sources.list.d/dietpi-mono.list
		[[ -f '/etc/apt/trusted.gpg.d/dietpi-mono.gpg' ]] || G_EXEC curl -sSfL 'https://download.mono-project.com/repo/xamarin_ring.gpg' -o /etc/apt/trusted.gpg.d/dietpi-mono.gpg
		[[ -f '/etc/apt/trusted.gpg' ]] && G_EXEC apt-key --keyring /etc/apt/trusted.gpg del '3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF'
	fi

	# WireGuard: Patch config
	if [[ -f '/etc/wireguard/wg0.conf' ]]
	then
		G_DIETPI-NOTIFY 2 'Updating WireGuard wg0 configuration'
		G_EXEC sed -i '\|/boot/dietpi/func/obtain_network_details|d' /etc/wireguard/wg0.conf
		G_EXEC sed -Ei "s#mawk .NR==3. /(run|boot|DietPi)/dietpi/.network#ip r l 0/0 | mawk '{print \$5;exit}'#g" /etc/wireguard/wg0.conf
	fi

	# GMediaRender: Patch service
	if [[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[163\]=2' /boot/dietpi/.installed
	then
		G_DIETPI-NOTIFY 2 'Updating GMediaRender service'
		cat << _EOF_ > /etc/systemd/system/gmrender.service
[Unit]
Description=GMediaRender (DietPi)
Documentation=https://github.com/hzeller/gmrender-resurrect/blob/master/INSTALL.md#commandline-options
Wants=network-online.target
After=network-online.target sound.target dietpi-boot.service

[Service]
User=gmrender
ExecStartPre=+/bin/bash -c '. /boot/dietpi/func/dietpi-globals; systemctl set-environment ACTIVE_IP=\$(G_GET_NET ip)'
ExecStart=/usr/local/bin/gmediarender -u '$G_HW_UUID' -f '$(</etc/hostname)' --gstout-audiosink=alsasink --gstout-audiodevice=default --logfile=stdout -I "\$ACTIVE_IP"

[Install]
WantedBy=multi-user.target
_EOF_
	fi

	# Disable obsolete DietPi-Boot service (do not stop it due to dependencies)
	systemctl -q is-enabled dietpi-boot 2> /dev/null && G_EXEC systemctl disable dietpi-boot

	# Remove obsolete files
	[[ -f '/boot/dietpi-CHANGELOG.txt' ]] && G_EXEC rm /boot/dietpi-CHANGELOG.txt
	[[ -f '/boot/dietpi/func/obtain_network_details' ]] && G_EXEC rm /boot/dietpi/func/obtain_network_details
	[[ -f '/boot/dietpi/boot' ]] && G_EXEC rm /boot/dietpi/boot
	[[ -f '/etc/systemd/system/dietpi-boot.service' ]] && G_EXEC rm /etc/systemd/system/dietpi-boot.service
	[[ -f '/etc/systemd/system/wg-quick@wg0.service.d/dietpi.conf' ]] && G_EXEC rm /etc/systemd/system/wg-quick@wg0.service.d/dietpi.conf
	[[ -d '/etc/systemd/system/wg-quick@wg0.service.d' ]] && G_EXEC rmdir --ignore-fail-on-non-empty /etc/systemd/system/wg-quick@wg0.service.d
	[[ -d '/opt/FreshRSS/FreshRSS-master' ]] && G_EXEC rm -R /opt/FreshRSS/FreshRSS-master
	[[ -L '/opt/FreshRSS/p/p' ]] && G_EXEC rm /opt/FreshRSS/p/p

	# Translate and apply boot wait for network setting
	local boot_wait_for_network=$(sed -n '/^[[:blank:]]*CONFIG_BOOT_WAIT_FOR_NETWORK=/{s/^[^=]*=//p;q}' /boot/dietpi.txt)
	if [[ $boot_wait_for_network == 0 ]]
	then
		/boot/dietpi/func/dietpi-set_software boot_wait_for_network 0

	elif grep -q '^[[:blank:]]*CONFIG_BOOT_WAIT_FOR_NETWORK=' /boot/dietpi.txt
	then
		/boot/dietpi/func/dietpi-set_software boot_wait_for_network 1
	fi
	G_EXEC sed -i '/^[[:blank:]]*CONFIG_BOOT_WAIT_FOR_NETWORK=/d' /boot/dietpi.txt

	# Enable systemd-timesyncd on oneshot modes to start early at boot
	local time_sync_mode=$(sed -n '/^[[:blank:]]*CONFIG_NTP_MODE=/{s/^[^=]*=//p;q}' /boot/dietpi.txt)
	[[ $time_sync_mode == [123] ]] && G_EXEC systemctl enable systemd-timesyncd

	# Inform and offer to re-apply the ssh.dietpi.com host key if missing: https://github.com/MichaIng/DietPi/issues/4844
	if [[ ! -f '/root/.ssh/known_hosts' ]] || ! grep -q '^ssh.dietpi.com' /root/.ssh/known_hosts && G_WHIP_DEFAULT_ITEM='yes' G_WHIP_YESNO '[WARNING] ssh.dietpi.com SSH/SFTP host key missing
\nThe host key to connect to our SSH/SFTP server is missing on your system, which means that uploading bug reports and sending or purging survey data fails.
\nDo you want to re-add that host key now?'
	then
		[[ -d '/root/.ssh' ]] || G_EXEC mkdir -p /root/.ssh
		[[ -f '/root/.ssh/known_hosts' ]] || > /root/.ssh/known_hosts
		G_EXEC sed -i '/^dietpi.com/d' /root/.ssh/known_hosts
		G_EXEC sed -i '/^185.101.93.93/d' /root/.ssh/known_hosts
		G_CONFIG_INJECT 'ssh.dietpi.com[[:blank:]]' 'ssh.dietpi.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDE6aw3r6aOEqendNu376iiCHr9tGBIWPgfrLkzjXjEsHGyVSUFNnZt6pftrDeK7UX+qX4FxOwQlugG4fymOHbimRCFiv6cf7VpYg1Ednquq9TLb7/cIIbX8a6AuRmX4fjdGuqwmBq3OG7ZksFcYEFKt5U4mAJIaL8hXiM2iXjgY02LqiQY/QWATsHI4ie9ZOnwrQE+Rr6mASN1BVFuIgyHIbwX54jsFSnZ/7CdBMkuAd9B8JkxppWVYpYIFHE9oWNfjh/epdK8yv9Oo6r0w5Rb+4qaAc5g+RAaknHeV6Gp75d2lxBdCm5XknKKbGma2+/DfoE8WZTSgzXrYcRlStYN' /root/.ssh/known_hosts
	fi

	if [[ -f '/etc/xdg/lxsession/LXDE/desktop.conf' ]]
	then
		G_DIETPI-NOTIFY 2 'Fixing the "No session for pid" error prompt on LXDE start'
		G_CONFIG_INJECT 'polkit/command=' 'polkit/command=' /etc/xdg/lxsession/LXDE/desktop.conf '\[Session\]'
	fi
}

Patch_7_8()
{
	# Remove IPv4 preference
	G_EXEC sed -i '/CONFIG_PREFER_IPV4/d' /boot/dietpi.txt
	[[ -f '/etc/wgetrc' ]] && G_EXEC sed -i 's/^[[:blank:]]*prefer-family[[:blank:]]*=/#&/' /etc/wgetrc
	[[ -f '/etc/apt/apt.conf.d/99-dietpi-force-ipv4' ]] && G_EXEC rm /etc/apt/apt.conf.d/99-dietpi-force-ipv4

	# Inform users about removed Subsonic and in case add service to DietPi-Services includes, as it has been removed from the hardcoded list
	if [[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[34\]=2' /boot/dietpi/.installed
	then
		G_WHIP_MSG '[ INFO ] Subsonic has been removed from DietPi-Software
\nSince it is not developed anymore and due to shared library dependencies only compatible with Debian Stretch, we removed Subsonic from DietPi-Software.
\nThe instance installed on your system will remain, but it cannot be installed, reinstalled or uninstalled anymore.
\nWe recommend to migrate to Airsonic-Advanced, which can be found in DietPi-Software was well.
\nManual Subsonic uninstall instructions: https://github.com/MichaIng/DietPi/pull/4895
'
		if [[ -f '/etc/init.d/subsonic' ]]
		then
			# shellcheck disable=SC2015
			[[ -f '/boot/dietpi/.dietpi-services_include_exclude' ]] && grep -q 'subsonic' /boot/dietpi/.dietpi-services_include_exclude || G_EXEC eval "echo '+ subsonic' >> /boot/dietpi/.dietpi-services_include_exclude"
		fi
	fi
	# Remove obsolete Subsonic install state
	[[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[34\]=' /boot/dietpi/.installed && G_EXEC sed -i '/^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[34\]=/d' /boot/dietpi/.installed

	# Inform users about removed emonHub and in case add service to DietPi-Services includes, as it has been removed from the hardcoded list
	if [[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[99\]=2' /boot/dietpi/.installed
	then
		G_WHIP_MSG '[ INFO ] emonHub has been removed from DietPi-Software
\nSince we do not have a single reported installation, we removed emonHub from DietPi-Software.
\nThe instance installed on your system will remain, but it cannot be installed, reinstalled or uninstalled anymore.
\nIf you want to keep using and updating it, have a look at the official repository: https://github.com/openenergymonitor/emonhub
\nManual emonHub uninstall instructions: https://github.com/MichaIng/DietPi/pull/4895
'
		if [[ -f '/etc/systemd/system/emonhub.service' ]]
		then
			# shellcheck disable=SC2015
			[[ -f '/boot/dietpi/.dietpi-services_include_exclude' ]] && grep -q 'emonhub' /boot/dietpi/.dietpi-services_include_exclude || G_EXEC eval "echo '+ emonhub' >> /boot/dietpi/.dietpi-services_include_exclude"
		fi
	fi
	# Remove obsolete emonHub install state
	[[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[99\]=' /boot/dietpi/.installed && G_EXEC sed -i '/^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[99\]=/d' /boot/dietpi/.installed
	# Remove obsolete emonHub API key setting from dietpi.txt
	grep -q 'SOFTWARE_EMONHUB_APIKEY' /boot/dietpi.txt && G_EXEC sed -Ei '/(SOFTWARE_EMONHUB_APIKEY|^#.*EmonCMS)/d' /boot/dietpi.txt

	# Reinstall Roon Server
	if [[ -f '/boot/dietpi/.installed' && ! -d '/opt/roonserver' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[154\]=2' /boot/dietpi/.installed
	then
		G_DIETPI-NOTIFY 2 'Reinstalling Roon Server to resolve an issue where the internal updater purges all Roon data and configs'
		G_EXEC mkdir -p /opt/roonserver
		for i in /mnt/dietpi_userdata/roonserver/{Appliance,RoonMono,RoonDotnet,Server,check.sh,start.sh,VERSION}
		do
			[[ -e $i ]] && G_EXEC mv "$i" "/opt${i#/mnt/dietpi_userdata}"
		done
		echo 154 >> /var/tmp/dietpi/dietpi-update_reinstalls
	fi

	# RPi 400: Inform user about fixed overclocking profiles
	[[ $G_HW_MODEL == 4 && $G_HW_MODEL_NAME == *'400'* ]] && grep -qE '^[[:blank:]]*(arm|core)_freq=' /boot/config.txt && G_WHIP_MSG '[ INFO ] New overclocking profiles for Raspberry Pi 400
\ndietpi-config falsely offered Raspberry Pi 4 overclocking profiles on Raspberry Pi 400. This has now been fixed and a new set of profiles dedicated for the Raspberry Pi 400 has been added.
\nYou may try them out via: "dietpi-config" > "Performance Options" > "Overclocking"
\nFeel free to share your own testing results and suggest changes or additional profiles with us via forum or GitHub.'

	# RPi: Remove ineffective rootdelay (wait for X seconds) from cmdline if rootwait (wait indefinitely) is present already
	if (( $G_HW_MODEL < 10 )) && grep -Eq '(^|[[:blank:]])rootwait([[:blank:]]|$)' /boot/cmdline.txt && grep -Eq '(^|[[:blank:]])rootdelay=' /boot/cmdline.txt
	then
		G_DIETPI-NOTIFY 2 'Removing ineffective "rootdelay" argument from /boot/cmdline.txt'
		G_EXEC sed -i -e 's/^rootdelay=[^[:blank:]]*[[:blank:]]*//g' -e 's/[[:blank:]]*[[:blank:]]rootdelay=[^[:blank:]]*//g' /boot/cmdline.txt
	fi

	# DietPi-Backup: Move logs to persistent backup location
	if [[ -f '/var/log/dietpi-backup.log' ]]
	then
		G_WHIP_MSG '[WARNING] Moving dietpi-backup.log out of /var/log
\nNew DietPi-Backup log files are now created within the chosen backup directory. The existing old log is moved from /var/log/dietpi-backup.log to /tmp/dietpi-backup.log in case you need to review it.'
		G_EXEC mv /{var/log,tmp}/dietpi-backup.log
	fi
}

Patch_7_9()
{
	# On Raspberry Pi, for backwards compatibility with software compiled against older libraspberrypi0, create symlinks from old to new filenames
	if (( $G_HW_MODEL < 10 && $G_HW_ARCH < 3 )) && dpkg-query -s 'libraspberrypi0' &> /dev/null
	then
		G_DIETPI-NOTIFY 2 'Applying workaround for compiled against older libraspberrypi0'
		G_EXEC cd /usr/lib/arm-linux-gnueabihf
		while read -r line
		do
			[[ ! -f $line || -f ${line%.0} ]] && continue
			line=${line#/usr/lib/arm-linux-gnueabihf/}
			G_EXEC ln -sf "$line" "${line%.0}"

		done < <(dpkg -L 'libraspberrypi0' | grep '^/usr/lib/arm-linux-gnueabihf/.*\.so.0$')
	fi

	# Update choice and preference index variables
	[[ -f '/boot/dietpi/.installed' ]] && G_EXEC sed -Ei -e 's/INDEX_(LOGGING|WEBSERVER|DESKTOP|BROWSER)_CURRENT/INDEX_\1/g' -e '/INDEX_(LOGGING|WEBSERVER|DESKTOP|BROWSER|SSHSERVER|FILESERVER)_TARGET/d' -e '/INDEX_(SSHSERVER|FILESERVER)_CURRENT/d' /boot/dietpi/.installed

	# Offer to update DietPi-Dashboard TCP port: https://github.com/MichaIng/DietPi/issues/4966
	if [[ -f '/opt/dietpi-dashboard/config.toml' ]] && grep -Eq '^[[:blank:]]*port[[:blank:]]+=[[:blank:]]+8088$' /opt/dietpi-dashboard/config.toml
	then
		G_WHIP_BUTTON_CANCEL_TEXT='No' G_WHIP_YESNO '[ INFO ] Changed DietPi-Dashboard TCP port
\nThe default TCP network port for the DietPi-Dashboard has been changed from 8088 to 5252 to resolve a port conflict with InfluxDB. However, if you do not use or plan to use InfluxDB, port 8088 does not cause any issues.
\nDo you want to apply this change as well to your DietPi-Dashboard installation?
\nNB: You need to restart the service once for the port change to take effect:
 - systemctl restart dietpi-dashboard' && G_CONFIG_INJECT 'port[[:blank:]]' 'port = 5252' /opt/dietpi-dashboard/config.toml && echo 200 >> /var/tmp/dietpi/dietpi-update_reinstalls
	fi

	# ownCloud/Nextcloud: Disable maintenance mode once manually, since DietPi-Services enabled of before this update but doesn't handle/disable it anymore afterwards.
	[[ -f '/var/www/owncloud/config/config.php' ]] && grep -Eq "^[[:blank:]]*'maintenance'[[:blank:]]+=>[[:blank:]]+true,\$" /var/www/owncloud/config/config.php && G_EXEC sed -Ei "s/^[[:blank:]]*'maintenance'[[:blank:]]+=>[[:blank:]]+true,\$/  'maintenance' => false,/" /var/www/owncloud/config/config.php
	[[ -f '/var/www/nextcloud/config/config.php' ]] && grep -Eq "^[[:blank:]]*'maintenance'[[:blank:]]+=>[[:blank:]]+true,\$" /var/www/nextcloud/config/config.php && G_EXEC sed -Ei "s/^[[:blank:]]*'maintenance'[[:blank:]]+=>[[:blank:]]+true,\$/  'maintenance' => false,/" /var/www/nextcloud/config/config.php
}

Patch_8_0()
{
	# RPi: Fix possibly doubled CMA size in KMS overlay setting
	if (( $G_HW_MODEL < 10 )) && grep -Eq 'dtoverlay=vc4-f?kms-v3d.*,cma-.*,cma-' /boot/config.txt
	then
		G_DIETPI-NOTIFY 2 'Fixing doubled CMA size in KMS overlay setting'
		while grep -Eq 'dtoverlay=vc4-f?kms-v3d.*,cma-.*,cma-' /boot/config.txt
		do
			G_EXEC sed -Ei '/dtoverlay=vc4-f?kms-v3d.*,cma-.*,cma-/s/,cma-[^,]*//' /boot/config.txt
		done
	fi

	# Reinstall Airsonic to migrate to Airsonic-Advanced and mitigate Log4Shell for it once and for all: https://github.com/MichaIng/DietPi/pull/4948
	if [[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[33\]=2' /boot/dietpi/.installed && ! grep -q 'Airsonic-Advanced' /etc/systemd/system/airsonic.service
	then
		G_WHIP_MSG '[ INFO ] Reinstalling Airsonic to migrate to Airsonic-Advanced
\nThe classic Airsonic project has been archived by its maintainer and it suffers from the critical Log4Shell security vulnerability:
- https://dietpi.com/blog/?p=1172
\nAirsonic-Advanced is an actively developed successor which does not use the related Log4j library and can be used as a direct replacement for classic Airsonic, migrating all data and settings automatically.
\nAirsonic will be reinstalled as part of this update to migrate to Airsonic-Advanced. Afterwards, we recommend to check out the new "Credentials" settings, create a new safer encrypted password and remove the old one.'
		# Migrate to "dietpi" as primary group and remove obsolete "airsonic" group
		getent passwd airsonic > /dev/null && G_EXEC usermod -g dietpi airsonic
		getent group airsonic > /dev/null && G_EXEC groupdel airsonic
		echo 33 >> /var/tmp/dietpi/dietpi-update_reinstalls
	fi

	# RPi: Remove dummy files: https://github.com/RPi-Distro/raspberrypi-sys-mods/pull/60
	if (( $G_HW_MODEL < 10 ))
	then
		[[ -f '/etc/apt/trusted.gpg.d/microsoft.gpg' && ! -s '/etc/apt/trusted.gpg.d/microsoft.gpg' ]] && G_EXEC rm /etc/apt/trusted.gpg.d/microsoft.gpg
		[[ -f '/etc/apt/sources.list.d/vscode.list' && $(</etc/apt/sources.list.d/vscode.list) == '### Disabled by raspberrypi-sys-mods ###' ]] && G_EXEC rm /etc/apt/sources.list.d/vscode.list
	fi

	# RPi: Fix forced max frequencies: https://github.com/MichaIng/DietPi/issues/5088
	(( $G_HW_MODEL < 10 )) && grep -Eq '(.){100}' /boot/config.txt && G_EXEC sed -Ei 's/^((.){99})..*$/\1/' /boot/config.txt

	# Blynk Server: Apply Log4Shell mitigation
	[[ -f '/etc/systemd/system/blynkserver.service' ]] && ! grep -q '\-Dlog4j2.formatMsgNoLookups=true' /etc/systemd/system/blynkserver.service && G_EXEC sed -i 's/java -jar/java -Dlog4j2.formatMsgNoLookups=true -jar/' /etc/systemd/system/blynkserver.service
}

Patch_8_1()
{
	# DietPi-Services cleanup: https://dietpi.com/phpbb/viewtopic.php?p=42027#p42027
	[[ -f '/dietpi-process_tool.conf' ]] && G_EXEC rm /dietpi-process_tool.conf
	[[ -f '/dietpi-services_edit.conf' ]] && G_EXEC rm /dietpi-services_edit.conf

	# RPi: Remove obsolete VCSM overlay since the device node has been removed
	if (( $G_HW_MODEL < 10 ))
	then
		grep -q 'dtoverlay=dietpi-disable_vcsm' /boot/config.txt && G_EXEC sed -i '/dtoverlay=dietpi-disable_vcsm/d' /boot/config.txt
		[[ -f '/boot/overlays/dietpi-disable_vcsm.dtbo' ]] && G_EXEC rm /boot/overlays/dietpi-disable_vcsm.dtbo
	fi

	# RPi: Fix MATE install: https://github.com/MichaIng/DietPi/issues/5214
	[[ $G_HW_MODEL -le 9 && -f '/etc/apt/preferences.d/dietpi-lxde' ]] && cat << '_EOF_' > /etc/apt/preferences.d/dietpi-lxde
Package: openbox* obconf* libob* pcmanfm* libfm* gtk-* libgtk* libgail* gir1.2-gtk-3.0 lx*
Pin: origin archive.raspberrypi.org
Pin-Priority: -1
_EOF_

	# Odroid C2 mainline image: Remove obsolete IRQ affinity: https://github.com/MichaIng/DietPi/issues/5235
	[[ $G_HW_MODEL == 12 && -f '/var/lib/dietpi/postboot.d/c2_smp.sh' ]] && ! grep -q '^[[:blank:]]*63:.*dwc_otg' /proc/interrupts && G_EXEC rm /var/lib/dietpi/postboot.d/c2_smp.sh

	# Fix Home Assistant restart: https://dietpi.com/phpbb/viewtopic.php?t=10025
	[[ -f '/etc/systemd/system/home-assistant.service' ]] && G_CONFIG_INJECT 'RestartForceExitStatus=100' 'RestartForceExitStatus=100' /etc/systemd/system/home-assistant.service '\[Service\]'
}

Patch_8_2()
{
	# Remove obsolete quotation from armbianEnv.txt
	[[ -f '/boot/armbianEnv.txt' ]] && grep -q '^[[:blank:]]*extraargs="' /boot/armbianEnv.txt && G_EXEC sed -i -e 's/^[[:blank:]]*extraargs="[[:blank:]]*/extraargs=/' -e 's/[[:blank:]]*"[[:blank:]]*$//' /boot/armbianEnv.txt

	# RPi: Remove multiple cgroup_enable=memory entries from cmdline.txt: https://github.com/MichaIng/DietPi/issues/5225#issuecomment-1033056312
	[[ -f '/boot/cmdline.txt' ]] && while grep -q 'cgroup_enable=memory cgroup_enable=memory' /boot/cmdline.txt; do G_EXEC sed -i 's/cgroup_enable=memory cgroup_enable=memory/cgroup_enable=memory/g' /boot/cmdline.txt; done

	# Apply cgroups-v2 workaround if the kernel does not support it: https://github.com/MichaIng/DietPi/issues/4705
	# - This is required on Bullseye only, but we'll apply it on Buster as well to cover later distro upgrades, since the logic is too complicated for our upgrade blog article.
	if (( $(uname -r | mawk -F'.' '{print $1}') < 4 || ( $(uname -r | mawk -F'.' '{print $1}') == 4 && $(uname -r | mawk -F'.' '{print $2}') < 15 ) ))
	then
		# Odroids
		if [[ $G_HW_MODEL -gt 9 && $G_HW_MODEL -le 16 && -f '/boot/boot.ini' ]] && ! grep -q 'systemd.unified_cgroup_hierarchy=0' /boot/boot.ini
		then
			G_DIETPI-NOTIFY 2 'Forcing legacy cgroups v1 hierarchy on old kernel device'
			G_EXEC sed -i '/^setenv bootargs "/s/"$/ systemd.unified_cgroup_hierarchy=0"/' /boot/boot.ini

		# Sparky SBC
		elif [[ $G_HW_MODEL == 70 && -f '/boot/uenv.txt' ]] && ! grep -q 'systemd.unified_cgroup_hierarchy=0' /boot/uenv.txt
		then
			G_DIETPI-NOTIFY 2 'Forcing legacy cgroups v1 hierarchy on old kernel device'
			G_EXEC sed -i '/^bootargs=/s/$/ systemd.unified_cgroup_hierarchy=0/' /boot/uenv.txt

		# ROCK Pi S
		elif [[ $G_HW_MODEL == 73 && -f '/boot/boot.cmd' ]] && ! grep -q 'systemd.unified_cgroup_hierarchy=0' /boot/boot.cmd
		then
			G_DIETPI-NOTIFY 2 'Forcing legacy cgroups v1 hierarchy on old kernel device'
			G_EXEC sed -i '/^setenv bootargs "/s/"$/ systemd.unified_cgroup_hierarchy=0"/' /boot/boot.cmd
			G_AG_CHECK_INSTALL_PREREQ u-boot-tools
			G_EXEC mkimage -C none -A arm64 -T script -d /boot/boot.cmd /boot/boot.scr
		fi
	fi

	# Remove legacy PINE A64 patches from mainline kernel systems
	if [[ $G_HW_MODEL == 40 && $(uname -r) == '5'* ]]
	then
		[[ -f '/etc/bashrc.d/dietpi-pine64-cursorfix.sh' ]] && G_EXEC rm /etc/bashrc.d/dietpi-pine64-cursorfix.sh
		grep -q '^8723bs$' /etc/modules && G_EXEC sed -i '/^8723bs$/d' /etc/modules
	fi

	# Remove and migrate Chromium config files
	[[ $G_HW_MODEL -gt 9 && -f '/root/.chromium-browser.init' ]] && G_EXEC rm /root/.chromium-browser.init
	if [[ $G_DISTRO == 5 && $G_HW_MODEL -le 9 && -d '/etc/chromium.d' ]]
	then
		[[ -f '/etc/chromium.d/custom_flags' ]] && G_EXEC mv /etc/{chromium.d/custom_flags,chromium-browser/customizations/dietpi}
		G_EXEC rm -R /etc/chromium.d
	fi
	[[ -f '/etc/chromium.d/custom_flags' ]] && G_EXEC mv /etc/chromium.d/{custom_flags,dietpi}

	# Remove obsolete Nvidia install state
	[[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[151\]=' /boot/dietpi/.installed && G_EXEC sed -i '/^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[151\]=/d' /boot/dietpi/.installed

	# Deluge: Apply autoconnect for web interface
	if [[ -f '/mnt/dietpi_userdata/deluge/.config/deluge/hostlist.conf' && -f '/mnt/dietpi_userdata/deluge/.config/deluge/web.conf' ]] && grep -q '"default_daemon": "",' /mnt/dietpi_userdata/deluge/.config/deluge/web.conf
	then
		local id=$(mawk -F\" '/"[0-9a-f]+",/{print $2;exit}' /mnt/dietpi_userdata/deluge/.config/deluge/hostlist.conf)
		G_CONFIG_INJECT '"default_daemon":' "    \"default_daemon\": \"$id\"," /mnt/dietpi_userdata/deluge/.config/deluge/web.conf
	fi

	# Update Allo GUI: https://github.com/MichaIng/DietPi/pull/5328
	if [[ -f '/boot/dietpi/.installed' ]] && grep -q '^[[:blank:]]*aSOFTWARE_INSTALL_STATE\[160\]=2' /boot/dietpi/.installed
	then
		# shellcheck disable=SC2016
		G_WHIP_MSG '[ INFO ] Updating Allo GUI to v14.0
\nThe Allo GUI has been received a major version update with a few breaking changes:
- The database is now generated on install, containing only the login credentials, using the global software password.
- It uses APCu now as memory based cache and session store, reducing disk writes and enhancing performance.
- It does shell command calls now natively via PHP instead of invoking the "allo" user via SSH, which renders this user obsolete.
- It is now installed to /opt/allo, only linking the "public" subdirectory into the webserver document root.
- A number of other updates, fixes, security hardenings and cleanups have been applied.
\nThe update is applied now, along with the following migration steps:
- The database is recreated from scratch, using the global software password (default: "dietpi") for login instead of the hardcoded "allo". You can change the password with the following command:
  - mysql -e "update allo.users set password='\''$(php -r '\''echo password_hash("yourPassword",PASSWORD_BCRYPT);'\'')'\'' where id=1;"
- The obsolete "allo" user is removed. Its home directory /home/allo remains, just in case you stored files there, but otherwise you can safely remove it.'
 
		echo 160 >> /var/tmp/dietpi/dietpi-update_reinstalls
		getent passwd allo > /dev/null && G_EXEC userdel allo
		if G_EXEC_NOHALT=1 G_EXEC systemctl start mariadb
		then
			[[ -d '/mnt/dietpi_userdata/mysql/allo_db' ]] && G_EXEC mysqladmin -f drop allo_db
			[[ $(mysql -e 'select user from mysql.user where user="allo_db";') ]] && G_EXEC mysql -e 'drop user allo_db@localhost'
		fi
		# Beta v8.2.1
		[[ -d '/mnt/dietpi_userdata/allo' ]] && G_EXEC rm -R /mnt/dietpi_userdata/allo
	fi
}

Patch_8_3()
{
	:
}

Patch_8_4()
{
	# https://dietpi.com/phpbb/viewtopic.php?t=10229
	if [[ -f '/boot/armbianEnv.txt' ]] && grep -q 'extraargs="net.ifnames=0"' /boot/armbianEnv.txt
	then
		G_DIETPI-NOTIFY 2 'Fixing syntax for legacy network interface nameing (eth0/wlan0). \e[33mNB: If you rely on "predictable" interface naming (enp0s0/wlp0s0), remove "net.ifnames=0" from /boot/armbianEnv.txt!'
		G_EXEC sed -i 's/extraargs="net.ifnames=0"/extraargs=net.ifnames=0/' /boot/armbianEnv.txt
	fi

	# Update workaround for numpy on ARMv6/7 Buster
	(( $G_HW_ARCH < 3 && $G_DISTRO == 5 )) && [[ -f '/etc/pip-constraints.txt' ]] && G_EXEC sed -i '/^numpy!=1.21.5; python_version=='\''3.7'\''$/c\numpy<1.21.5; python_version=='\''3.7'\' /etc/pip-constraints.txt

	# https://github.com/MichaIng/DietPi/issues/5441
	if [[ -f '/etc/sudoers.d/dietpi' ]]
	then
		G_DIETPI-NOTIFY 2 'Hardening /etc/sudoers.d/dietpi permissions'
		G_EXEC chmod 0440 /etc/sudoers.d/dietpi
	fi

	# Remove obsolete software preference indices
	[[ -f '/boot/dietpi/.installed' ]] && G_EXEC sed -Ei '/^[[:blank:]]*INDEX_(WEBSERVER|DESKTOP|BROWSER)=/d' /boot/dietpi/.installed
}

# v6.35 => v7 migration
if (( $G_DIETPI_VERSION_CORE == 6 && $G_DIETPI_VERSION_SUB > 34 ))
then
	G_DIETPI_VERSION_CORE=7
	G_DIETPI_VERSION_SUB=-1

# Failsafe: Error out on invalid version
elif ! (( $G_DIETPI_VERSION_CORE > 6 ))
then
	G_DIETPI-NOTIFY 1 "Unsupported DietPi version $G_DIETPI_VERSION_CORE.$G_DIETPI_VERSION_SUB.$G_DIETPI_VERSION_RC. Aborting..."
	G_DIETPI-NOTIFY 2 'Please run "dietpi-update" to repeat the regular update path.'
	exit 1
fi

# Main loop
G_DIETPI_VERSION_RC=0
while :
do
	if declare -F "Patch_${G_DIETPI_VERSION_CORE}_$(( $G_DIETPI_VERSION_SUB + 1 ))" > /dev/null
	then
		((G_DIETPI_VERSION_SUB++))

	elif declare -F "Patch_$(( $G_DIETPI_VERSION_CORE + 1 ))_0" > /dev/null
	then
		((G_DIETPI_VERSION_CORE++))
		G_DIETPI_VERSION_SUB=0
	else
		break
	fi
	G_DIETPI-NOTIFY 2 "Patching to DietPi v$G_DIETPI_VERSION_CORE.$G_DIETPI_VERSION_SUB..."
	"Patch_${G_DIETPI_VERSION_CORE}_$G_DIETPI_VERSION_SUB"
	G_VERSIONDB_SAVE
	G_DIETPI-NOTIFY 0 "Patched to DietPi v$G_DIETPI_VERSION_CORE.$G_DIETPI_VERSION_SUB"
done

# Performing reinstalls
if [[ -f '/var/tmp/dietpi/dietpi-update_reinstalls' ]]
then
	G_DIETPI-NOTIFY 2 'Performing DietPi-Software reinstalls...'
	# Coders NB: Assigning to array is not easily possible here since we need to split at newline AND space.
	# shellcheck disable=SC2046
	(( $G_DIETPI_INSTALL_STAGE == 2 )) && /boot/dietpi/dietpi-software reinstall $(</var/tmp/dietpi/dietpi-update_reinstalls)
	G_EXEC rm /var/tmp/dietpi/dietpi-update_reinstalls
fi

exit 0
}
